#!/usr/bin/env python3

"""
This module provides an asynchronous comprehension example.

It includes the `async_comprehension` function, which collects 10
random float numbers generated by `async_generator` into a list
using asynchronous comprehension.
"""

from typing import List


async_generator = __import__('0-async_generator').async_generator


async def async_comprehension() -> List[float]:
    """
    Collect 10 random float numbers from an asynchronous generator into a list.

    This function uses asynchronous comprehension to gather 10 random float
    numbers produced by `async_generator` into a list.
    The numbers are generated one by one with a 1-second delay between each.

    Returns:
    list[float]: A list of 10 random float numbers generated by
    `async_generator`.
    """
    return [number async for number in async_generator()]
